;; Test all the f32 operators on major boundary values and all special
;; values (except comparison and bitwise operators, which are tested in
;; f32_bitwise.wast and f32_cmp.wast).

(module
 (export "assert_return" (func $assert_return))
 (func $assert_return (param f32 f32)
    get_local 0
    get_local 1
    f32.ne
    if
      unreachable
    end
 )
  (func $add     (param $x f32) (param $y f32) (result f32) (f32.add (get_local $x) (get_local $y)))
  (func $sub     (param $x f32) (param $y f32) (result f32) (f32.sub (get_local $x) (get_local $y)))
  (func $mul     (param $x f32) (param $y f32) (result f32) (f32.mul (get_local $x) (get_local $y)))
  (func $div     (param $x f32) (param $y f32) (result f32) (f32.div (get_local $x) (get_local $y)))
  (func $sqrtt   (param $x f32) (result f32) (f32.sqrt (get_local $x)))
  (func $min     (param $x f32) (param $y f32) (result f32) (f32.min (get_local $x) (get_local $y)))
  (func $max     (param $x f32) (param $y f32) (result f32) (f32.max (get_local $x) (get_local $y)))
  (func $ceil    (param $x f32) (result f32) (f32.ceil (get_local $x)))
  (func $floor   (param $x f32) (result f32) (f32.floor (get_local $x)))
  (func $trunc   (param $x f32) (result f32) (f32.trunc (get_local $x)))
  (func $nearest (param $x f32) (result f32) (f32.nearest (get_local $x)))
  (start $runtest)
  (func $runtest 
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const -inf)) (f32.const -inf))
    (call $assert_return (call $add (f32.const -0x0p+0) (f32.const inf)) (f32.const inf))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const -inf)) (f32.const -inf))
    (call $assert_return (call $add (f32.const 0x0p+0) (f32.const inf)) (f32.const inf))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const -0x1p-149))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const -0x1p-149))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const 0x1p-149))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const 0x1p-149))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const -0x1p-148))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const 0x0p+0))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const 0x0p+0))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x1p-148))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1.000002p-126))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1.fffffcp-127))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1.fffffcp-127))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1.000002p-126))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-1))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-1))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-1))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-1))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p+0))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p+0))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p+0))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p+0))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const -inf)) (f32.const -inf))
    (call $assert_return (call $add (f32.const -0x1p-149) (f32.const inf)) (f32.const inf))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const -inf)) (f32.const -inf))
    (call $assert_return (call $add (f32.const 0x1p-149) (f32.const inf)) (f32.const inf))
))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1.000002p-126))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const -0x1.fffffcp-127))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const 0x1.fffffcp-127))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1.000002p-126))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const -0x1p-125))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x1p-125))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1p-126) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const 0x1p-126) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1.8p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1.8p+0))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.b21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.721fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.721fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.b21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1p-1) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const 0x1p-1) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1.8p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1.8p+0))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+1))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+1))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.d21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.521fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.521fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.d21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const 0x1p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1.b21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const -0x1.721fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const 0x1.721fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1.b21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1.d21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const -0x1.521fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const 0x1.521fb6p+2))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1.d21fb6p+2))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+3))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+3))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $add (f32.const -inf) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -inf) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $add (f32.const inf) (f32.const -inf)))
;;  (call $assert_return (call $add (f32.const inf) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $add (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $add (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $add (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x0p+0) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x0p+0) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const -0x1p-148))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const 0x1p-148))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const 0x1.fffffcp-127))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const -0x1.000002p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const 0x1.000002p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const -0x1.fffffcp-127))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1p-149) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-149) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1.fffffcp-127))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const -0x1.000002p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const 0x1.000002p-126))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1.fffffcp-127))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const -0x1p-125))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const 0x1p-125))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1p-126) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-126) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const -0x1.8p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const 0x1.8p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.721fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.b21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.b21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.721fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1p-1) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1p-1) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const -0x1.8p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const 0x1.8p+0))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const -0x1p+1))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const 0x1p+1))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.521fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.d21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.d21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.521fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1p+0) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1p+0) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1.721fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const -0x1.b21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const 0x1.b21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1.721fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1.521fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const -0x1.d21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const 0x1.d21fb6p+2))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1.521fb6p+2))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+3))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+3))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -inf) (f32.const -inf)))
;;  (call $assert_return (call $sub (f32.const -inf) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $sub (f32.const inf) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $sub (f32.const inf) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $sub (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $sub (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x0p+0) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x0p+0) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x0p+0) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x0p+0) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1p-149) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-149) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const 0x1p-127))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const -0x1p-127))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-127))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-127))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1p-126) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-126) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const 0x1p-127))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const -0x1p-127))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-127))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-127))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const 0x1p-2))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const -0x1p-2))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p-2))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p-2))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1p-1) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p-1) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1p+0) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const 0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const -0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1.8p-147))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const 0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const -0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1.921fb6p-124))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const 0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const -0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1.921fb6p+1))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.3bd3cep+5))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.3bd3cep+5))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.3bd3cep+5))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.3bd3cep+5))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const 0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const -0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1.fffffep-22))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const 0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const -0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1.fffffep+1))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const 0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const -0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1.fffffep+126))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -inf) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -inf) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const inf) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const inf) (f32.const 0x0p+0)))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1p+0)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call $mul (f32.const -inf) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call $mul (f32.const inf) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call $mul (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call $mul (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x0p+0) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x0p+0) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x0p+0) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x0p+0) (f32.const 0x0p+0)))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x0p+0) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x0p+0) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const 0x1p-23))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const -0x1p-23))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1p-23))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1p-23))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const 0x1p-148))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const -0x1p-148))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-148))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-148))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-149) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-149) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const 0x1p+23))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const -0x1p+23))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1p+23))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1p+23))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const 0x1p-125))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const -0x1p-125))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-125))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-125))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.45f3p-129))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.45f3p-129))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.45f3p-129))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.45f3p-129))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-126) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-126) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const 0x1p+125))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const -0x1p+125))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p+125))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p+125))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.45f306p-4))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.45f306p-4))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.45f306p-4))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.45f306p-4))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const 0x1p-129))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const -0x1p-129))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1p-129))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1p-129))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p-1) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p-1) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const 0x1p+126))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const -0x1p+126))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p+126))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p+126))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const 0x1p+1))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const -0x1p+1))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p+1))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p+1))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.45f306p-3))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.45f306p-3))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.45f306p-3))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.45f306p-3))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1p-128))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1p-128))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1p-128))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1p-128))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1p+0) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1p+0) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const 0x1.921fb6p+3))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const -0x1.921fb6p+3))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1.921fb6p+3))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1.921fb6p+3))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const 0x1.921fb8p-126))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const -0x1.921fb8p-126))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.921fb8p-126))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.921fb8p-126))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.45f304p+125))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.45f304p+125))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.45f304p+125))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.45f304p+125))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -0x1p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x1p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "div" (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "div" (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1p+0)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call "div" (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call "div" (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -inf) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -inf) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const inf) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const inf) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "div" (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "div" (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x0p+0) (f32.const inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x0p+0) (f32.const inf)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1p-149) (f32.const inf)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1p-149) (f32.const inf)) (f32.const 0x1p-149))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1p-126) (f32.const inf)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1p-126) (f32.const inf)) (f32.const 0x1p-126))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1p-1) (f32.const inf)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1p-1) (f32.const inf)) (f32.const 0x1p-1))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1p+0) (f32.const inf)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1p+0) (f32.const inf)) (f32.const 0x1p+0))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x0p+0)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1p-149)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1p-126)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1p-1)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1p+0)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const -inf) (f32.const inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "min" (f32.const inf) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "min" (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "min" (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const -inf)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x0p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const -inf)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x0p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x0p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x0p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x0p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x0p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x0p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x0p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1p-126)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1p-126)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1p-1)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1p-1)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1p+0)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1p+0)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1.921fb6p+2)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -0x1.fffffep+127)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const -inf)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-149) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const -inf)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-149) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-149) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-149) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-149) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-149) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x0p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1p-149)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1p-149)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1p-1)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1p-1)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1p+0)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1p+0)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1.921fb6p+2)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -0x1.fffffep+127)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const -inf)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-126) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const -inf)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-126) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-126) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-126) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-126) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-126) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x0p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1p-149)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1p-126)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1p+0)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1p+0)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1.921fb6p+2)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -0x1.fffffep+127)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const -inf)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p-1) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const -inf)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p-1) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-1) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-1) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p-1) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p-1) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x0p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1.921fb6p+2)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -0x1.fffffep+127)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const -inf)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const -inf)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1p+0) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p+0) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p+0) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1p+0) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1p+0) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x0p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-149)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-126)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1p-1)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1p-1)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1p+0)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -0x1.fffffep+127)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const -inf)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.921fb6p+2) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const -inf)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.921fb6p+2) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1.921fb6p+2) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1.921fb6p+2) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1.921fb6p+2) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1.921fb6p+2) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x0p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1p-149)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1p-126)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1p-1)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1p+0)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const -inf)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -0x1.fffffep+127) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const -inf)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const 0x1.fffffep+127) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1.fffffep+127) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1.fffffep+127) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const 0x1.fffffep+127) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const 0x1.fffffep+127) (f32.const nan:0x200000)))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x0p+0)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1p-149)) (f32.const -0x1p-149))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1p-149)) (f32.const 0x1p-149))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1p-149)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1p-126)) (f32.const -0x1p-126))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1p-126)) (f32.const 0x1p-126))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1p-126)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1p-1)) (f32.const -0x1p-1))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1p-1)) (f32.const 0x1p-1))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1p-1)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1p+0)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1p+0)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1.921fb6p+2)) (f32.const -0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1.921fb6p+2)) (f32.const 0x1.921fb6p+2))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1.921fb6p+2)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const 0x1.fffffep+127)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "max" (f32.const -inf) (f32.const inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const -inf)) (f32.const inf))
;;  (call $assert_return (call "max" (f32.const inf) (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const inf) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const inf) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const inf) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const inf) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x0p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x0p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x0p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1p-149)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1p-149)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1p-149)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1p-126)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1p-126)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1p-126)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1p-1)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1p-1)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1p-1)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1p+0)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1p+0)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1.921fb6p+2)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const 0x1.fffffep+127)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -inf)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -inf)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const inf)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const inf)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const -nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const -nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan) (f32.const -nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "max" (f32.const nan) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan) (f32.const nan:0x200000)))
;;  (call $assert_return_arithmetic_nan (call "max" (f32.const nan:0x200000) (f32.const nan:0x200000)))
;;  (call $assert_return (call "sqrt" (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "sqrt" (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1p-149)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1p-149)) (f32.const 0x1.6a09e6p-75))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1p-126)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1p-126)) (f32.const 0x1p-63))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1p-1)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1p-1)) (f32.const 0x1.6a09e6p-1))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1p+0)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1.921fb6p+2)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1.921fb6p+2)) (f32.const 0x1.40d932p+1))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -0x1.fffffep+127)))
;;  (call $assert_return (call "sqrt" (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+63))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -inf)))
;;  (call $assert_return (call "sqrt" (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "sqrt" (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "sqrt" (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "sqrt" (f32.const nan:0x200000)))
;;  (call $assert_return (call "floor" (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "floor" (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "floor" (f32.const -0x1p-149)) (f32.const -0x1p+0))
;;  (call $assert_return (call "floor" (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "floor" (f32.const -0x1p-126)) (f32.const -0x1p+0))
;;  (call $assert_return (call "floor" (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "floor" (f32.const -0x1p-1)) (f32.const -0x1p+0))
;;  (call $assert_return (call "floor" (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "floor" (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "floor" (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "floor" (f32.const -0x1.921fb6p+2)) (f32.const -0x1.cp+2))
;;  (call $assert_return (call "floor" (f32.const 0x1.921fb6p+2)) (f32.const 0x1.8p+2))
;;  (call $assert_return (call "floor" (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "floor" (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "floor" (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "floor" (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "floor" (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "floor" (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "floor" (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "floor" (f32.const nan:0x200000)))
;;  (call $assert_return (call "ceil" (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "ceil" (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "ceil" (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "ceil" (f32.const 0x1p-149)) (f32.const 0x1p+0))
;;  (call $assert_return (call "ceil" (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "ceil" (f32.const 0x1p-126)) (f32.const 0x1p+0))
;;  (call $assert_return (call "ceil" (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "ceil" (f32.const 0x1p-1)) (f32.const 0x1p+0))
;;  (call $assert_return (call "ceil" (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "ceil" (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "ceil" (f32.const -0x1.921fb6p+2)) (f32.const -0x1.8p+2))
;;  (call $assert_return (call "ceil" (f32.const 0x1.921fb6p+2)) (f32.const 0x1.cp+2))
;;  (call $assert_return (call "ceil" (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "ceil" (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "ceil" (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "ceil" (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "ceil" (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "ceil" (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "ceil" (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "ceil" (f32.const nan:0x200000)))
;;  (call $assert_return (call "trunc" (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "trunc" (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "trunc" (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "trunc" (f32.const -0x1.921fb6p+2)) (f32.const -0x1.8p+2))
;;  (call $assert_return (call "trunc" (f32.const 0x1.921fb6p+2)) (f32.const 0x1.8p+2))
;;  (call $assert_return (call "trunc" (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "trunc" (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "trunc" (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "trunc" (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "trunc" (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "trunc" (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "trunc" (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "trunc" (f32.const nan:0x200000)))
;;  (call $assert_return (call "nearest" (f32.const -0x0p+0)) (f32.const -0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const 0x0p+0)) (f32.const 0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const -0x1p-149)) (f32.const -0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const 0x1p-149)) (f32.const 0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const -0x1p-126)) (f32.const -0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const 0x1p-126)) (f32.const 0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const -0x1p-1)) (f32.const -0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const 0x1p-1)) (f32.const 0x0p+0))
;;  (call $assert_return (call "nearest" (f32.const -0x1p+0)) (f32.const -0x1p+0))
;;  (call $assert_return (call "nearest" (f32.const 0x1p+0)) (f32.const 0x1p+0))
;;  (call $assert_return (call "nearest" (f32.const -0x1.921fb6p+2)) (f32.const -0x1.8p+2))
;;  (call $assert_return (call "nearest" (f32.const 0x1.921fb6p+2)) (f32.const 0x1.8p+2))
;;  (call $assert_return (call "nearest" (f32.const -0x1.fffffep+127)) (f32.const -0x1.fffffep+127))
;;  (call $assert_return (call "nearest" (f32.const 0x1.fffffep+127)) (f32.const 0x1.fffffep+127))
;;  (call $assert_return (call "nearest" (f32.const -inf)) (f32.const -inf))
;;  (call $assert_return (call "nearest" (f32.const inf)) (f32.const inf))
;;  (call $assert_return_canonical_nan (call "nearest" (f32.const -nan)))
;;  (call $assert_return_arithmetic_nan (call "nearest" (f32.const -nan:0x200000)))
;;  (call $assert_return_canonical_nan (call "nearest" (f32.const nan)))
;;  (call $assert_return_arithmetic_nan (call "nearest" (f32.const nan:0x200000)))
;;    ))
;;  (start $start_fn)
;;)
